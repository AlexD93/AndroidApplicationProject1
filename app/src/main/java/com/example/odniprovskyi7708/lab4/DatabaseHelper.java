package com.example.odniprovskyi7708.lab4;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;//imported library for our database
import android.database.sqlite.SQLiteOpenHelper; //imported "Helper method for our database"

/**
 * Created by Odniprovskyi7708 on 6/10/2016.
 */

public class DatabaseHelper extends SQLiteOpenHelper {//Here we need to extends our class which has name "DatabaseHelper"
    // and was created manually in first folder "com.example.lab" which was generated by default

    public static final String DATABASE_NAME = "Student.db"; //Here we are creating our database, name could be whatever you prefer and it's not case sensitive
    public static final String TABLE_NAME = "student_table"; //Here we are basically creating our table which in future will collect our columns

    //Assigned columns
    public static final String Column_1 = "ID";
    public static final String Column_2 = "FIRSTNAME";
    public static final String Column_3 = "LASTNAME";
    public static final String Column_4 = "MARKS";

    //Now, here in our constructor we need to create our database, so to do that we need to call a function which will do that!
    public DatabaseHelper(Context context) {
        super(context, DATABASE_NAME, null, 1);
        //Now, whenever a constructor will be called, our database will be created

    }

    @Override
    public void onCreate(SQLiteDatabase sqLiteDatabase) {
        sqLiteDatabase.execSQL("Create table " + TABLE_NAME + " (ID INTEGER PRIMARY KEY AUTOINCREMENT, FIRSTNAME TEXT, LASTNAME TEXT, MARKS INTEGER)");//This line of code executes whatever "Query" passed inside this method.
        // It takes String variable!
    }

    @Override
    public void onUpgrade(SQLiteDatabase sqLiteDatabase, int i, int i1) {
        sqLiteDatabase.execSQL("DROP TABLE IF EXIST " + TABLE_NAME);
        onCreate(sqLiteDatabase);//Here we can drop our "Query"
    }

    public boolean insertData(String firstName, String lastName, String marks) {
        SQLiteDatabase sqLiteDatabase = this.getWritableDatabase(); //Create an instance of database
        ContentValues contentValues = new ContentValues(); //Created an instance of content value

        // Here we are passing name of our columns and the values related to that columns
        contentValues.put(Column_2, firstName);
        contentValues.put(Column_3, lastName);
        contentValues.put(Column_4, marks);
        long result = sqLiteDatabase.insert(TABLE_NAME, null, contentValues);
        if (result == -1) {
            return false;
        } else {
            return true;
        }
    }
    public Cursor getAllData() {
        SQLiteDatabase sqLiteDatabase = this.getWritableDatabase();//Create an instance of database
        Cursor res = sqLiteDatabase.rawQuery("select * from " + TABLE_NAME, null);//Here we created an instance of the Cursor class
        return res;
    }

    public boolean updateData(String id, String firstName, String lastName, String marks){
        SQLiteDatabase sqLiteDatabase = this.getWritableDatabase(); //Create an instance of database
        ContentValues contentValues = new ContentValues(); //Created an instance of content value

        // Here we are passing name of our columns and the values related to that columns
        contentValues.put(Column_1, id);
        contentValues.put(Column_2, firstName);
        contentValues.put(Column_3, lastName);
        contentValues.put(Column_4, marks);
        sqLiteDatabase.update(TABLE_NAME, contentValues, "id = ?", new String[]{id});//this method simply update argument we will pass here
        return true;
    }


    public Integer deleteData(String id){
        SQLiteDatabase sqLiteDatabase = this.getWritableDatabase(); //Create an instance of database
        return sqLiteDatabase.delete(TABLE_NAME, "ID = ?", new String[] {id});
    }
}